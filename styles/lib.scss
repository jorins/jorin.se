// Library of common variables and mixins

@use 'sass:color';

// Constants
$border-radius: 2rem;
$border-radius-small: 1rem;
$gap: 1rem;
$border-width: 0.2rem;

$font-heading: 'Quicksand';
$font-body: sans-serif;
$font-monospace: monospace;

$highlight: rgb(100%, 100%, 100%);
$primary: rgb(85%, 85%, 85%);
$background: rgb(15%, 15%, 15%);
$lowlight: rgb(0%, 0%, 0%);

$low-transparency: 0.6;
$medium-transparency: 0.4;
$high-transparency: 0.2;

$instant-animation: 0.05s;
$fast-animation: 0.1s;
$medium-animation: 0.25s;
$slow-animation: 0.5s;

$link-color: #7799ff;
$link-color-highlight: color.adjust($link-color, $lightness: 10%);
$visited-link-color: #dd99dd;
$visited-link-color-highlight: color.adjust(
  $visited-link-color,
  $lightness: 10%
);
$invalid-link-color: #ff6688;
$invalid-link-color-highlight: color.adjust(
  $invalid-link-color,
  $lightness: 10%
);

// Mixins
@mixin glass(
  $background: $background,
  $radius: $border-radius,
  $panel-transparency: $low-transparency,
  $border-transparency: $high-transparency
) {
  background-color: color.change($background, $alpha: $panel-transparency);

  $border-a: $border-width solid
    color.change($primary, $alpha: $border-transparency);
  $border-b: $border-width solid
    color.change($background, $alpha: $border-transparency);

  border-top: $border-a;
  border-left: $border-a;
  border-right: $border-b;
  border-bottom: $border-b;
  border-radius: $radius;

  @include shadow;
}

@mixin normaliseButton {
  background: none;
  color: inherit;
  border: none;
  padding: 0;
  font: inherit;
  cursor: pointer;
  outline: inherit;
}

@mixin softUnderline {
  border-bottom: $border-width solid
    color.change($primary, $alpha: $high-transparency);
  padding-bottom: 0.5em;
}

// Desktop media query
@mixin desktop {
  // Use `not max` instead of `min` to exclude 3:4 devices (iPad) and less
  // but make sure to include large devices regardless
  @media only screen and not (max-aspect-ratio: 3 / 4),
    only screen and (min-width: 70rem) {
    @content;
  }
}

// Block only in effect when user does not have prefers-reduced-motion
@mixin animate {
  @media not (prefers-reduced-motion) {
    @content;
  }
}

@mixin linkColors($base: $link-color, $hover: $link-color-highlight) {
  color: $base;

  &:hover {
    color: $hover;
  }

  @include animate {
    transition: color $fast-animation;
  }
}

// Selector for all heading levels
@mixin headings() {
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    @content;
  }
}

// Common shadow design
@mixin shadow() {
  box-shadow: 0.5rem 0.5rem 0.75rem
    color.change($lowlight, $alpha: $medium-transparency);
}
